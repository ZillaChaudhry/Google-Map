@{
    ViewData["Title"] = "Home";
}


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css">
<div class="wrapper">
    <section class="slick-slideshow">
        <div class="slick-custom">
            <img src="~/template_css/images/slideshow/sign.jpg" class="img-fluid" alt="Slide 1">
            <div class="slick-bottom">
              
            </div>
            <div class="slick-textbox">
                <input type="text" placeholder="Search Your Place Here..." class="middle-textbox" id="LocationName" name="LocationName">
                <span class="search-icon" onclick="FindLocation()">&#128269;</span>
            </div>
        </div>
        <div class="slick-custom">
            <img src="~/template_css/images/slideshow/pixels.jpg" class="img-fluid" alt="Slide 2">
            <div class="slick-bottom">
              
            </div>
            <div class="slick-textbox">
                <input type="text" placeholder="Search Your Place Here..." class="middle-textbox" id="LocationName">
                <span class="search-icon" onclick="FindLocation()">&#128269;</span>

            </div>
        </div>
        <div class="slick-custom">
            <img src="~/template_css/images/slideshow/lock.jpg" class="img-fluid" alt="Slide 3">
            <div class="slick-bottom">
                
            </div>
            <div class="slick-textbox">
                <input type="text" placeholder="Search Your Place Here..." class="middle-textbox" id="LocationName">
                <span class="search-icon" onclick="FindLocation()">&#128269;</span>
            </div>
        </div>
    </section>
</div>



<section class="Map-Section">
    <div class="map-container">
        <button class="show-marks-btn" onclick="showMarks()"
                style="
                position: absolute;
                top: 10px;
                right: 10px;
                background-color: red;
                color: white;
                border: none;
                padding: 12px 24px;
                font-size: 16px;
                border-radius: 30px;
                cursor: pointer;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                transition: all 0.3s ease;
                z-index: 1000;
            "
                onmouseover="this.style.backgroundColor='darkred'; this.style.transform='translateY(-2px)'; this.style.boxShadow='0 6px 10px rgba(0, 0, 0, 0.15)';"
                onmouseout="this.style.backgroundColor='red'; this.style.transform='translateY(0)'; this.style.boxShadow='0 4px 6px rgba(0, 0, 0, 0.1)';"
                onfocus="this.style.outline='none'; this.style.boxShadow='0 0 0 0.2rem rgba(255, 0, 0, 0.5)';">
            Show Marks
        </button>

        <div id="map"></div>

        <!-- Legend -->
        <div class="map-legend"
             style="
                position: absolute;
                bottom: 10px;
                left: 10px;
                background-color: white;
                padding: 10px;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                font-size: 14px;
                z-index: 1000;
            ">
            <div style="display: flex; align-items: center; margin-bottom: 5px;">
                <span style="display: inline-block; width: 15px; height: 15px; background-color: red; margin-right: 8px;"></span>
                <span>Danger</span>
            </div>
            <div style="display: flex; align-items: center;">
                <span style="display: inline-block; width: 15px; height: 15px; background-color: green; margin-right: 8px;"></span>
                <span>Safe</span>
            </div>
        </div>
    </div>
</section>



<section class="about section-padding">
    <div class="container">
        <div class="row">

            <div class="col-12 text-center">
                <h2 class="mb-5">Get started with <span>Google MapShield</span> For Safety</h2>
            </div>

            <div class="col-lg-2 col-12 mt-auto mb-auto">
                <ul class="nav nav-pills mb-5 mx-auto justify-content-center align-items-center" id="pills-tab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="pills-home-tab" data-bs-toggle="pill" data-bs-target="#pills-home" type="button" role="tab" aria-controls="pills-home" aria-selected="true">Introduction</button>
                    </li>

                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="pills-youtube-tab" data-bs-toggle="pill" data-bs-target="#pills-youtube" type="button" role="tab" aria-controls="pills-youtube" aria-selected="true">Safety Signs</button>
                    </li>

                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="pills-skill-tab" data-bs-toggle="pill" data-bs-target="#pills-skill" type="button" role="tab" aria-controls="pills-skill" aria-selected="false">Features</button>
                    </li>
                </ul>
            </div>

            <div class="col-lg-10 col-12">
                <div class="tab-content mt-2" id="pills-tabContent">
                    <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">

                        <div class="row">
                            <div class="col-lg-7 col-12">
                                <img src="~/template_css/images/stop-634941_1280.jpg" class="img-fluid" alt="">
                            </div>
                            <div class="col-lg-5 col-12">
                                <div class="d-flex flex-column h-100 ms-lg-4 mt-lg-0 mt-5">
                                    <h4 class="mb-3">Good <span>Security</span> <br>Features for <span>your</span> Safety</h4>

                                    <p>Google MapShield includes <a href="sign-in.html">Login in</a> / <a href="sign-up.html">sign up</a> procedure, about, FAQs, report page, and a "Show Marks" button that displays safe and unsafe zones on the map.</p>

                                    <p>.</p>

                                    <div class="mt-2 mt-lg-auto">
                                        <a href="about.html" class="custom-link mb-2">
                                           
                                            <i class="bi-arrow-right ms-2"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="pills-youtube" role="tabpanel" aria-labelledby="pills-youtube-tab">

                        <div class="row">
                            <div class="col-lg-7 col-12">
                                <div class="ratio ratio-16x9">
                                    <iframe src="https://www.youtube-nocookie.com/embed/wVP2g7aPd8Q?controls=0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                                </div>
                            </div>

                            <div class="col-lg-5 col-12">
                                <div class="d-flex flex-column h-100 ms-lg-4 mt-lg-0 mt-5">
                                    <h4 class="mb-3">Danger Road Signs</h4>

                                    <p>We aim to raise awareness about unsafe areas. Watch the video below to learn more about high-risk zones and safety precautions</p>

                                    <p>Our features include real-time safety alerts, route monitoring, and interactive map displays of safe and unsafe zones.</p>


                                    <div class="mt-2 mt-lg-auto">
                                      @*   <a href="contact.html" class="custom-link mb-2">
                                            Work with us
                                            <i class="bi-arrow-right ms-2"></i>
                                        </a> *@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="tab-pane fade" id="pills-skill" role="tabpanel" aria-labelledby="pills-skill-tab">
                        <div class="row">
                            <div class="col-lg-7 col-12">
                                <img src="~/template_css/images/signpost-5274077_1280.jpg" class="img-fluid" alt="">
                            </div>

                            <div class="col-lg-5 col-12">
                                <div class="d-flex flex-column h-100 ms-lg-4 mt-lg-0 mt-5">
                                    <h4 class="mb-3">How can Google MapShield help you?</h4>

                                    <p>With real-time safety tracking, our system helps users stay informed and avoid high-risk areas by providing up-to-date safety alerts and secure route guidance.</p>

@* 
                                    <div class="skill-thumb mt-3">

                                        <strong>Branding</strong>
                                        <span class="float-end">90%</span>
                                        <div class="progress">
                                            <div class="progress-bar progress-bar-primary" role="progressbar" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100" style="width: 90%;"></div>
                                        </div>

                                        <strong>Design & Stragety</strong>
                                        <span class="float-end">70%</span>
                                        <div class="progress">
                                            <div class="progress-bar progress-bar-primary" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100" style="width: 70%;"></div>
                                        </div>

                                        <strong>Online Platform</strong>
                                        <span class="float-end">80%</span>
                                        <div class="progress">
                                            <div class="progress-bar progress-bar-primary" role="progressbar" aria-valuenow="80" aria-valuemin="0" aria-valuemax="100" style="width: 80%;"></div>
                                        </div> *@

                                    </div>

                                    <div class="mt-2 mt-lg-auto">
                                       @*  <a href="products.html" class="custom-link mb-2">
                                            Explore products
                                            <i class="bi-arrow-right ms-2"></i>
                                        </a> *@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>
</section>




<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    var map;
    var markersLayer; // Define the markersLayer variable

    // Get current location using IP info API
    function getLocation() {
        return new Promise((resolve, reject) => {
            fetch('https://ipinfo.io/json?token=7e1935ddf24e7e')
                .then(response => response.json())
                .then(data => {
                    const [lat, lon] = data.loc.split(',');
                    resolve({
                        lat: parseFloat(lat),
                        lon: parseFloat(lon),
                    });
                })
                .catch(() => {
                    reject('Failed to retrieve location from API');
                });
        });
    }

    // Initialize the map with the user's location
    async function initializeMap() {
        try {
            const location = await getLocation();
            const { lat, lon } = location;

            map = L.map('map').setView([lat, lon], 13);

            // Base layer with streets and street names
            L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            // Add a marker to show the current location
            L.marker([lat, lon]).addTo(map)
                .bindPopup('You are here!')
                .openPopup();

            // Initialize markersLayer as a LayerGroup
            markersLayer = L.layerGroup().addTo(map); // Initialize markersLayer

        } catch (error) {
            alert(error);
        }
    }

    async function showMarks() {
        const response = await fetch('/Admin/ShowOnMap', {
            method: 'POST',
            credentials: 'include'
        });

        const result = await response.json();

        if (response.ok) {
            console.log('API Response:', result);

            markersLayer.clearLayers(); // Clear existing markers

            const userLocation = map.getCenter();
            const originalMarker = L.marker(userLocation).addTo(markersLayer).bindPopup('You are here!').openPopup();

            let dangerZone = false; // Flag to indicate if the user is in a danger zone

            if (Array.isArray(result) && result.length > 0) {
                for (const report of result) {
                    const fromLat = report.fromlatitude;
                    const fromLon = report.fromlongitude;
                    const toLat = report.tolatitude;
                    const toLon = report.tolongitude;

                    if (fromLat !== undefined && fromLon !== undefined && toLat !== undefined && toLon !== undefined) {
                        const fromMarker = L.marker([fromLat, fromLon]).addTo(markersLayer);
                        const toMarker = L.marker([toLat, toLon]).addTo(markersLayer);

                        const lineColor = report.review_type === 'good' ? 'green' : 'red';

                        const latlngs = [
                            [fromLat, fromLon],
                            [toLat, toLon]
                        ];
                        const polyline = L.polyline(latlngs, { color: lineColor }).addTo(map);

                        if (lineColor === 'red' && typeof L.GeometryUtil !== 'undefined') {
                            // Calculate distance between user and danger zone segments
                            const points = polyline.getLatLngs();
                            for (let i = 0; i < points.length - 1; i++) {
                                const segmentStart = points[i];
                                const segmentEnd = points[i + 1];

                                const distance = L.GeometryUtil.distanceSegmentToPoint(
                                    map,
                                    segmentStart,
                                    segmentEnd,
                                    userLocation
                                );

                                if (distance < 50) { // Adjust threshold as needed
                                    dangerZone = true;
                                    break;
                                }
                            }
                        }

                        if (dangerZone) {
                            break;
                        }
                    }
                }

                if (dangerZone) {
                    // Show SweetAlert2 popup for danger zone
                    Swal.fire({
                        icon: 'warning',
                        title: 'Danger Zone!',
                        text: 'You are currently in a danger zone. Please be cautious.',
                        showConfirmButton: true,
                        confirmButtonText: 'Okay',
                        confirmButtonColor: '#d33',
                        background: '#f8d7da',
                        color: '#721c24',
                        iconColor: '#d33'
                    });
                }

                const bounds = markersLayer.getBounds();
                if (bounds.isValid()) {
                    map.fitBounds(bounds); // Adjust map to fit all markers
                } else {
                    alert('No valid coordinates to display on the map.');
                }
            } else {
                alert('No location data found.');
            }
        } else {
            alert('Failed to retrieve location data.');
        }
    }



    
    async function FindLocation() {
        const locationName = document.getElementById('LocationName').value;

        if (!locationName) {
            alert("Please enter a location.");
            return;
        }

        try {
            // Use the Nominatim API to geocode the location
            const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${locationName}`);
            const data = await response.json();

            if (data.length === 0) {
                alert("Location not found. Please try again.");
                return;
            }

            // Extract the first result's latitude and longitude
            const { lat, lon } = data[0];

            // Clear previous markers from the markers layer
            markersLayer.clearLayers();

            // Add a new marker for the searched location
            const marker = L.marker([lat, lon]).addTo(markersLayer);
            marker.bindPopup(`${locationName} found here!`).openPopup();

            // Set the map view to the searched location
            map.setView([lat, lon], 13);

        } catch (error) {
            alert("An error occurred while searching for the location.");
            console.error(error);
        }
    }


    // Initialize the map when the document is ready
    document.addEventListener('DOMContentLoaded', initializeMap);
</script>

